@import '../utility';

@mixin blui-mat-button-toggle-default($palette) {
    .mat-button-toggle-group-appearance-standard:not([variant='outline']):not([variant='filled']) {
        .mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                border-color: map-get($palette, unselectedBorderColor);
                color: map-get($palette, inactiveTextColor);
            }
        }

        // checked toggle button
        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                background-color: map-get($palette, activeBackgroundColor);
                color: map-get($palette, activeTextColor);
            }
        }

        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            &:first-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
            &:nth-of-type(1n + 1) {
                &:not(:first-of-type) {
                    &:not(:last-of-type) {
                        .mat-button-toggle-button {
                            border-color: map-get($palette, selectedBorderColor);
                        }
                    }
                }
            }
            &:last-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
        }
    }
}

@mixin blui-mat-button-toggle-outline($palette) {
    .mat-button-toggle-group-appearance-standard[variant='outline'] {
        .mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                border-color: map-get($palette, unselectedBorderColor);
                color: map-get($palette, inactiveTextColor);
            }
        }

        // checked toggle button
        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                background-color: map-get($palette, activeBackgroundColor);
                color: map-get($palette, activeTextColor);
            }
        }

        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            &:first-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
            &:nth-of-type(1n + 1) {
                &:not(:first-of-type) {
                    &:not(:last-of-type) {
                        .mat-button-toggle-button {
                            border-color: map-get($palette, selectedBorderColor);
                        }
                    }
                }
            }
            &:last-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
        }
    }
}

@mixin blui-mat-button-toggle-filled($palette) {
    .mat-button-toggle-group-appearance-standard[variant='filled'] {
        .mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                border-color: map-get($palette, unselectedBorderColor);
                color: map-get($palette, inactiveTextColor);
            }
        }

        // checked toggle button
        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            .mat-button-toggle-button {
                background-color: map-get($palette, activeBackgroundColor);
                color: map-get($palette, activeTextColor);
            }
        }
        
        .mat-button-toggle-checked.mat-button-toggle-appearance-standard {
            &:first-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
            &:nth-of-type(1n + 1) {
                &:not(:first-of-type) {
                    &:not(:last-of-type) {
                        .mat-button-toggle-button {
                            border-color: map-get($palette, selectedBorderColor);
                        }
                    }
                }
            }
            &:last-of-type {
                .mat-button-toggle-button {
                    border-color: map-get($palette, selectedBorderColor);
                }
            }
        }
    }
}
